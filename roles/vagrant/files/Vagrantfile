# -*- mode: ruby -*-
# # vi: set ft=ruby :

$script = <<SCRIPT
echo I am provisioning...
date > /etc/vagrant_provisioned_at
SCRIPT

Vagrant.configure("2") do |config|

  config.ssh.username = 'root'
  config.ssh.password = 'toto'
  #config.ssh.insert_key = true

  config.vm.synced_folder '/var/cache/pacman/pkg/', '/var/cache/pacman/pkg/', type: '9p', disabled: false, readonly: true

  # Example configuration of new VM..
  config.vm.provision "shell", inline: $script

  config.vm.provision "ansible_local" do |ansible|
    ansible.inventory_path = "/vagrant/koaxiel/arch_install/inventory"
    ansible.playbook = "/vagrant/koaxiel/arch_install/main.yml"
    ansible.limit = "all"
    ansible.extra_vars = {
      root_password: "toto",
      hostname: "titi_vm"
    }
    ansible.install = true
    ansible.verbose = true
  end

  config.vm.define :archlinux do |archlinux|
    # Box name
    #
    archlinux.vm.box = "archlinux"

    # Domain Specific Options
    #
    # See README for more info.
    #

    # Options for libvirt vagrant provider.
    archlinux.vm.provider :libvirt do |libvirt|

      # A hypervisor name to access. Different drivers can be specified, but
      # this version of provider creates KVM machines only. Some examples of
      # drivers are kvm (qemu hardware accelerated), qemu (qemu emulated),
      # xen (Xen hypervisor), lxc (Linux Containers),
      # esx (VMware ESX), vmwarews (VMware Workstation) and more. Refer to
      # documentation for available drivers (http://libvirt.org/drivers.html).
      libvirt.driver = 'kvm'

      # The name of the server, where libvirtd is running.
      # libvirt.host = "localhost"

      # If use ssh tunnel to connect to Libvirt.
      libvirt.connect_via_ssh = false

      # The username and password to access Libvirt. Password is not used when
      # connecting via ssh.
      libvirt.username = 'root'
      #libvirt.password = "secret"

      # Libvirt storage pool name, where box image and instance snapshots will
      # be stored.
      libvirt.storage_pool_name = "default"

      # Set a prefix for the machines that's different than the project dir name.
      #libvirt.default_prefix = ''

      libvirt.memory = 2048
      libvirt.cpus = 2
      libvirt.disk_bus = 'sata'
      libvirt.storage :file, :device => :cdrom, :path => '/var/lib/libvirt/images/archlinux-2016.09.24-dual.iso'
      libvirt.loader = '/usr/share/ovmf/x64/ovmf_x64.bin'
      libvirt.boot 'hd'
      libvirt.boot 'cdrom'

      #libvirt.channel :type => 'spicevmc', :target_name => 'com.redhat.spice.0', :target_type => 'virtio'
      libvirt.graphics_type = 'spice'
      libvirt.keymap = 'fr'
    end
    # Interfaces for VM
    #
    # Networking features in the form of `config.vm.network`
    #
    #archlinux.vm.network :private_network, :ip => '10.20.30.40'
    #archlinux.vm.network :public_network, :ip => '10.20.30.41'
  end

end
